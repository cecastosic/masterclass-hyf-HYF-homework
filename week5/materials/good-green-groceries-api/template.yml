AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31
Parameters:
  SubscriptionsSvetlana:
    Type: String
  good-green-groceries-products:
    Type: String

Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SubscriptionsTable
      Environment:
        Variables:
          SUBSCRIPTIONS_TABLE: !Ref SubscriptionsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /subscriptions
            Method: GET

  # This is a Lambda function config associated with the source code: put-item.js
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SubscriptionsTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SubscriptionsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /subscription
            Method: POST

  # This is a Lambda function config associated with the source code: get-all-products.js
  getAllProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-products.getAllProductsHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          SUBSCRIPTIONS_TABLE: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: GET

  SubscriptionsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref SubscriptionsSvetlana
      PrimaryKey:
        Name: id
        Type: String

  ProductsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref good-green-groceries-products
      PrimaryKey:
        Name: id
        Type: String

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
